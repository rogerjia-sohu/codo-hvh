

## For a live site, handling more connections, uncomment, then start WTServer.exe --phpCgiServers=25:
#worker_processes auto;
#worker_rlimit_nofile 100000;




events {   
	## For a live site, uncomment:
	#worker_connections 8096;
}


http {

	server_tokens		off;
	sendfile		on;
	tcp_nopush		on;
	tcp_nodelay		on;
	ssi			off;
	server_names_hash_bucket_size  64;


	## Timeouts ##
	##############

	client_body_timeout	5;
	client_header_timeout	5;
	keepalive_timeout	25 25;
	send_timeout		15s;
	resolver_timeout	3s;

	# Timeout period for connection with FastCGI-server. It should be noted that this value can't exceed 75 seconds. 
	fastcgi_connect_timeout 5s;

	# Amount of time for upstream to wait for a fastcgi process to send data. 
	# Change this directive if you have long running fastcgi processes that do not produce output until they have finished processing. 
	# If you are seeing an upstream timed out error in the error log, then increase this parameter to something more appropriate. 
	fastcgi_read_timeout	40s;

	# Request timeout to the server. The timeout is calculated between two write operations, not for the whole request. 
	# If no data have been written during this period then serve closes the connection.
	fastcgi_send_timeout	15s;


	## Buffers ##
	#############

	fastcgi_buffers			8 32k;
	fastcgi_buffer_size		32k;
	#fastcgi_busy_buffers_size	256k;
	#fastcgi_temp_file_write_size	256k;

	open_file_cache			off;

	# php max upload limit cannot be larger than this       
	client_max_body_size		8m;	

	####client_body_buffer_size	1K;
	client_header_buffer_size	1k;
	large_client_header_buffers	2 1k;	
	types_hash_max_size		2048;




	include nginx.mimetypes.conf;
	default_type text/html;




	## Logging ##
	#############

	access_log	"d:/wtserver/log/nginx_access.log";
	error_log	"d:/wtserver/log/nginx_error.log" warn;	#debug or warn
	log_not_found	on;	#enables or disables messages in error_log about files not found on disk. 
	rewrite_log	off;

	fastcgi_intercept_errors off;	# Do Not Change (off) !


	gzip  off;

	index  index.php index.htm index.html;

	server {


		# NEVER ALLOW PUBLIC ACCESS TO THIS SERVER !!!
		# Instead, create projects using WTServer.exe, and allow public access only to those projects!
		# How to allow access from LAN and Internet to your local project:
		# http://wtserver.wtriple.com/howtos.php#How-to-allow-access-from-LAN-and-Internet-to-your-local-project

		listen		127.0.0.1:80	default_server;		# Do Not Change ! Security Risk !
		listen		127.0.0.1:443	ssl;		# Do Not Change ! Security Risk !
		listen		192.168.19.146:80;
		listen		192.168.19.146:443	ssl;
		#listen		[::1]:80	ipv6only=on;		# Do Not Change ! Security Risk !
		server_name	localhost;				# Do Not Change ! Security Risk !
		server_name	cert.test;

		# This directive is modified automatically by WTServer.exe for portability.
		root		"d:/wtserver/www";
		autoindex on;
		
		#ssl on;
		ssl_certificate "d:/wtserver/_ssh_key/server.crt";
		ssl_certificate_key "d:/wtserver/_ssh_key/server.key";
		
		allow		127.0.0.1;	# Do Not Change ! Security Risk !
		allow		::1;		# Do Not Change ! Security Risk !
		allow		192.168.19.0/24;
		#deny		all;		# Do Not Change ! Security Risk !

		## deny access to .htaccess files, if Apache's document root
		## concurs with nginx's one
		location ~ /\.ht {
			deny  all;
		}


		## Tools are now served from wt-nmp/include/tools/
		location ~ ^/tools/.*\.php$ {					
			root "d:/wtserver/include";
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			allow		192.168.19.0/24;
			#deny		all;			# Do Not Change ! Security Risk !
		}
		location ~ ^/tools/ {
			root "d:/wtserver/include";
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			allow		192.168.19.0/24;
			#deny		all;			# Do Not Change ! Security Risk !
		}


		## How to add phpMyAdmin 
		## Copy phpMyAdmin files to d:/wtserver/include/phpMyAdmin then uncomment:

		location ~ ^/phpMyAdmin/.*\.php$ {
			root "d:/wtserver/include";
			index index.php;
			try_files $uri =404; 
			include         nginx.fastcgi.conf;
			fastcgi_pass    php_farm;
			allow           127.0.0.1;
			allow			192.168.19.146;
			allow           ::1;
			#deny            all;
		}
		location ~ ^/phpMyAdmin/ {
			root "d:/wtserver/include";
			index index.php;
		}

		## Notice that the root directive lacks /phpMyAdmin because Nginx adds the URL path /phpMyAdmin to the root path, so the resulting directory is d:/wtserver/include/phpMyAdmin
		

		## PHP for localhost ##
		#######################
		location ~ \.php$ {
			try_files $uri =404; 
			include		nginx.fastcgi.conf;
			include		nginx.redis.conf;
			fastcgi_pass	php_farm;
			allow		127.0.0.1;		# Do Not Change ! Security Risk !
			allow		::1;			# Do Not Change ! Security Risk !
			allow		192.168.19.0/24;
			#deny		all;			# Do Not Change ! Security Risk !
		}

		# How to allow access from LAN and Internet to your local project:
		# http://wtserver.wtriple.com/howtos.php#How-to-allow-access-from-LAN-and-Internet-to-your-local-project


		# Codo HVH rewriting rules
		rewrite ^(.*)/api/([a-z0-9]*) /$1/api.php?func=$2 last;
		# Rules for ImageFileManager->DirNameLength = 2
		location ^~ /images/ {
			rewrite '(?i)^.*/images/wxapp/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>jpg|png|bmp|gif)$' /images/wxapp/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			rewrite '(?i)^.*/images/androidapp/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>jpg|png|bmp|gif)$' /images/androidapp/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			rewrite '(?i)^.*/images/user/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>jpg|png|bmp|gif)$' /images/user/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			if (!-f $request_filename) {
				return 404;
			}
		}
		location ^~ /easemob/ {
			rewrite '(?i)^.*/easemob/image/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>jpg|png|bmp|gif)$' /easemob/image/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			rewrite '(?i)^.*/easemob/audio/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>amr)$' /easemob/audio/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			rewrite '(?i)^.*/easemob/video/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>mp4)$' /easemob/video/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			rewrite '(?i)^.*/easemob/other/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2})(?<h>[.a-z0-9]*)$' /easemob/other/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g$h last;
			if (!-f $request_filename) {
				return 404;
			}
		}
		location ^~ /hvh/silk2amr/ {
			rewrite '(?i)^.*/hvh/silk2amr/([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})(?<a>[a-f0-9]{2})(?<b>[a-f0-9]{2})(?<c>[a-f0-9]{2})(?<d>[a-f0-9]{2})(?<e>[a-f0-9]{2})(?<f>[a-f0-9]{2})(?<g>[a-f0-9]{2}).(?<h>silk|amr)$' /hvh/silk2amr/$1/$2/$3/$4/$5/$6/$7/$8/$9/$a/$b/$c/$d/$e/$f/$g.$h last;
			if (!-f $request_filename) {
				return 404;
			}
		}
	}

	# Codo HVH error handler
	error_page	404		/error.php?c=404;

	include domains.d/*.conf;
	include nginx.phpfarm.conf;

}
